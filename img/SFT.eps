%!PS-Adobe-2.0 EPSF-1.2%%Title: SFT.fh11%%Creator: FreeHand MX 11.0.2%%CreationDate: 10.11.2014 15:19%%BoundingBox: 0 0 381 73%%FHPathName:_DESIGNS_:Famadar:SFT:SFT.fh11%ALDOriginalFile:_DESIGNS_:Famadar:SFT:SFT.fh11%ALDBoundingBox: -57 -733 538 108%%FHPageNum:1%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 1 0.4627 0.7569 0 (0r 137g 62b)%%EndComments%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{dup where not{AltsysSepDict}if 3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{/cntr 0 def2 copy readstring{{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop}ifcntr 0 gt{pop 2 copydup length cntr sub cntr getintervalreadbinarystring} ifpop exch pop} bdf/_NXLevel2 defed { _NXLevel2 not { /colorimage where {userdict eq {/_rci false def } if} if} if} if/md defed{ md type /dicttype eq { /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if}if }if/setstrokeadjust defed{true setstrokeadjust/C{curveto}bdf/L{lineto}bdf/m{moveto}bdf}{/dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/setstrokeadjust{pop}bdf }ifelse/privrectpath { 4 -2 roll mdtransform round exch round exch idtransform 2 copy 0 lt exch 0 lt xor{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}ifelseclosepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed {/_bfh {/_fonthacksave currentpacking def false setpacking} bdf/_efh {_fonthacksave setpacking} bdf}{/_bfh {} bdf/_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` { false setoverprint /-save0- save def5 index concatpopstorerect left bottom width height rectclippop/MMdict_count countdictstack def/MMop_count count 1 sub defuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath} bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1 statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelseend def/printerRes gsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/graycalcs[{Angle Frequency} {GrayAngle GrayFrequency} {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps {forcemaxsteps{maxsteps}{/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelseprinterRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if }ifelse} bdf/nextrelease defed { /languagelevel defed not { /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if}if}iffhnumcolors 1 ne {/calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {currentpagedevice /PreRenderingEnhance known{currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if} if} if/gradfrequency 144 defprinterRes 1000 lt {/gradfrequency 72 def} if/adjnumsteps {dup dtransform abs exch abs max printerRes div gradfrequency mul round 5 max min }bdf/goodsep {spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted? 0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{systemdict /packedarray known {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{ /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{ /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/i{dup 0 eq{pop df dup} {dup} ifelse /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{ {/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{/NF exch def { exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length /Len exch def dup length Len add string dup Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{ dup FontDirectory exch known {pop 3 -1 roll pop} {RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf/RCJ{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFJ{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCJ} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFJ{dup hasfont not { pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse }if}bdf/FFJ{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get dup length 256 eq{256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }{7 -1 roll pop pop pop pop pop findfont}ifelse}ifelse_efh}bdf/GS {dup hasfont {findfontexch makesetfontexchpopts}{pop pop popts} ifelse} bdf/RCK{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFK{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCK} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFK{dup hasfont not { pop/JCsmhasfont {/JCsm}{/Courier}ifelse }if}bdf/FFK{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCTC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFTC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCTC} ifelse}bdf/FDFTC{dup hasfont not { pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse }if}bdf/FFTC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCSC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFSC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFSC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCSC} ifelse}bdf/FDFSC{dup hasfont not { pop/zh-gbscript-1.11hasfont {/zh-gbscript-1.11}{/Courier}ifelse }if}bdf/FFSC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFSC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/fps{currentflat exch dup 0 le{pop 1}if {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse}loop pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont {/Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 muladd add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor { max max max } ndf/maxspot {pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{0 1 2 index length 1 sub{ 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put}for4 1 roll pop pop pop}bdf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image}ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{aload pop (_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage}ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage}ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor { spots exch getdup 4 get (_vc_Registration) eq{pop 1 exch sub setseparationgray}{0 5 getinterval exch setcustomcolor}ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdfuserdict /islevel2systemdict /languagelevel known dup{pop systemdict /languagelevel get 2 ge} ifputislevel2 not{/currentcmykcolor{0 0 0 1 currentgray sub} ndf} if/tc{gsavesetcmykcolor currentcmykcolorgrestore} bind def/testCMYKColorThrough{tc add add add 0 ne} bind def/fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput}{ pop }ifelse/bc4 [0 0 0 0] def /_lfp4 {1 pop /yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdfc1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round height abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/bcs [0 0] def /_lfs4 {/yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/tint2 xdf /tint1 xdf bcs exch 1 exch put tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round height abs adjnumsteps dup 2 lt {pop 2} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfs6 {/tint2 xdf /tint1 xdf bcs exch 1 exch put /inrad xdf /radius xdf /yt xdf /xt xdf tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfp6 {1 pop /k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdf/inrad xdf /radius xdf /yt xdf /xt xdf c1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{AltsysDict /cvc 2 index put aload length dup 4 eq{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}{6 eq {sethexcolor} {setspotcolor} ifelse }ifelse}bdf 0 setseparationgray/imgr {1692 1584 2287.28 2425.89 } def /bleed 0 def /clpr {1692 1584 2287.28 2425.89 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def userdict begin /AGDOrigMtx matrix currentmatrix def end vms-1749 -2317 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor]defn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1]vcvms1791.9496 2389.5002 m1759.4695 2389.5002 L1752.4456 2389.0715 1748.983 2385.4626 1749.0818 2378.6735 C1765.3961 2363.8957 L1767.4764 2361.8471 1769.3294 2361.8471 1770.9547 2363.8957 C1791.9496 2389.5002 L[1 0.4627 0.7569 0]vcf 0 wS n1807.538 2348.1146 m1807.538 2379.4702 L1807.1243 2386.2509 1803.6401 2389.5937 1797.0862 2389.4983 C1783.8053 2373.2747 L1781.8276 2371.2663 1781.8276 2369.4775 1783.8053 2367.9084 C1807.538 2348.1146 Lf S n1749.0797 2370.8529 m1749.0797 2342.6144 L1749.202 2336.3912 1751.2425 2332.9568 1755.8999 2332.8852 C1763.638 2332.8852 L1773.3672 2344.8094 L1774.5912 2346.2974 1774.7004 2348.9021 1773.3672 2350.297 C1749.0797 2370.8529 Lf S n1769.6303 2333.2029 m1786.3125 2352.1095 L1788.7498 2354.4397 1790.6801 2354.2388 1793.1443 2352.1095 C1804.9014 2342.7356 L1807.5418 2340.2554 1807.9149 2338.865 1806.1723 2336.6982 C1803.8171 2333.9467 1802.3058 2333.0409 1800.135 2332.8852 C1769.6303 2333.2029 Lf S n1857.8951 2386.8019 m1852.0378 2375.2116 L1834.4929 2375.2116 L1829.4079 2375.4115 1827.2647 2372.4973 1831.7511 2369.5062 C1843.7153 2362.6519 1851.8061 2355.5648 1852.4116 2347.2258 C1852.4116 2338.0034 1846.4296 2331.5229 1838.4809 2331.5229 C1817.0728 2331.5229 L1817.0728 2343.7362 L1835.9885 2343.7362 L1840.5444 2343.4403 1841.9704 2346.6027 1839.1041 2350.3139 C1838.2457 2351.5506 1832.2311 2355.5803 1821.5595 2363.1504 C1809.0967 2371.1266 1814.9541 2386.1787 1825.1459 2386.9264 C1857.8951 2386.8019 L[0 0 0 1]vcf S n1857.6458 2332.1458 m1857.6458 2371.3757 L1857.4332 2381.524 1862.3261 2386.8324 1872.3241 2387.3003 C1889.5227 2387.3003 L1895.4771 2387.0511 1895.8509 2375.5854 1889.5227 2375.2116 C1877.4339 2375.2116 L1873.836 2375.0723 1871.8419 2373.4614 1871.4519 2370.3787 C1871.6348 2366.3179 1873.0472 2364.3238 1875.6891 2364.3967 C1884.4129 2364.3967 L1884.4129 2352.6818 L1871.5766 2352.6818 L1871.5766 2332.6445 L1857.6458 2332.1458 Lf S n1895.6017 2387.3003 m1899.5898 2383.3124 1898.5928 2378.8143 1895.6017 2375.2116 C1906.9428 2375.2116 L1906.9428 2332.0214 L1920.7488 2332.0214 L1920.7488 2375.2116 L1933.9592 2375.2116 L1939.5674 2375.2116 1939.5674 2387.3003 1933.9592 2387.3003 C1895.6017 2387.3003 Lf S n2009.5441 2352.4973 m2009.5441 2354.986 2009.3978 2358.4275 2011.8139 2360.9162 C2013.571 2362.6733 2015.547 2362.8196 2016.645 2362.8196 C2018.0368 2362.8196 L2018.5484 2362.8196 2019.7928 2362.8922 2019.7928 2364.2829 C2019.7928 2371.3838 L2019.7928 2372.3355 2019.6464 2373.1409 2017.5967 2373.1409 C2014.23 2373.1409 2012.3992 2371.8965 2011.0085 2370.7985 C2010.3495 2370.2858 2010.1306 2370.1395 2009.9842 2370.1395 C2009.9105 2370.1395 2009.6179 2370.2132 2009.6179 2370.7259 C2009.6179 2371.5313 L2009.6179 2372.5556 2008.7388 2372.5556 2008.2998 2372.5556 C2001.6379 2372.5556 L2000.6862 2372.5556 1999.5882 2372.4092 1999.5882 2370.5058 C1999.5882 2333.9034 L1999.5882 2332.9517 1999.7356 2331.8537 2001.6379 2331.8537 C2007.4944 2331.8537 L2008.4461 2331.8537 2009.5441 2332 2009.5441 2333.9034 C2009.5441 2352.4973 L[1 0.4627 0.7569 0]vcf n2009.5441 2352.4973 m2009.5441 2354.986 2009.3978 2358.4275 2011.8139 2360.9162 C2013.571 2362.6733 2015.547 2362.8196 2016.645 2362.8196 C2018.0368 2362.8196 L2018.5484 2362.8196 2019.7928 2362.8922 2019.7928 2364.2829 C2019.7928 2371.3838 L2019.7928 2372.3355 2019.6464 2373.1409 2017.5967 2373.1409 C2014.23 2373.1409 2012.3992 2371.8965 2011.0085 2370.7985 C2010.3495 2370.2858 2010.1306 2370.1395 2009.9842 2370.1395 C2009.9105 2370.1395 2009.6179 2370.2132 2009.6179 2370.7259 C2009.6179 2371.5313 L2009.6179 2372.5556 2008.7388 2372.5556 2008.2998 2372.5556 C2001.6379 2372.5556 L2000.6862 2372.5556 1999.5882 2372.4092 1999.5882 2370.5058 C1999.5882 2333.9034 L1999.5882 2332.9517 1999.7356 2331.8537 2001.6379 2331.8537 C2007.4944 2331.8537 L2008.4461 2331.8537 2009.5441 2332 2009.5441 2333.9034 C2009.5441 2352.4973 L[0 0 0 1]vctrue setoverprintf false setoverprintnvmrstrue eomode2024.8983 2345.628 m2024.8983 2339.8321 2026.4241 2330.2979 2039.3905 2330.2979 C2052.3569 2330.2979 2053.8827 2339.8321 2053.8827 2345.628 C2053.8827 2358.5956 L2053.8827 2364.3915 2052.3569 2373.9257 2039.3905 2373.9257 C2026.4241 2373.9257 2024.8983 2364.3915 2024.8983 2358.5956 C2024.8983 2345.628 Lh2035.2717 2360.3495 m2035.2717 2364.3915 2037.4841 2365.3831 2039.3905 2365.3831 C2041.2969 2365.3831 2043.5093 2364.3915 2043.5093 2360.3495 C2043.5093 2343.8741 L2043.5093 2339.8321 2041.2969 2338.8405 2039.3905 2338.8405 C2037.4841 2338.8405 2035.2717 2339.8321 2035.2717 2343.8741 C2035.2717 2360.3495 Ltrue setoverprintf false setoverprintn2111.2307 2330.3638 m2111.2307 2330.7563 2111.4665 2330.913 2111.6232 2330.913 C2112.9563 2330.913 2113.4265 2328.5605 2118.9166 2328.5605 C2128.8761 2328.5605 2129.7389 2337.4215 2129.7389 2342.9116 C2129.7389 2358.7525 L2129.7389 2363.5366 2129.5821 2373.4171 2119.4659 2373.4171 C2115.4656 2373.4171 2113.7401 2371.9273 2112.5638 2370.9078 C2112.3292 2370.751 2112.1725 2370.5153 2111.859 2370.5153 C2111.3875 2370.5153 2111.3097 2370.751 2111.3097 2371.0645 C2111.3097 2371.6927 L2111.3097 2372.3198 2110.9962 2372.79 2109.8977 2372.79 C2102.761 2372.79 L2101.7415 2372.79 2100.5652 2372.6333 2100.5652 2370.5942 C2100.5652 2320.0908 L2100.5652 2319.0713 2100.7232 2317.895 2102.761 2317.895 C2109.0349 2317.895 L2110.0544 2317.895 2111.2307 2318.0517 2111.2307 2320.0908 C2111.2307 2330.3638 Lh2111.2307 2358.6747 m2111.2307 2360.3212 2111.4665 2363.8501 2115.0743 2363.8501 C2118.6809 2363.8501 2118.9166 2360.3212 2118.9166 2358.6747 C2118.9166 2343.3029 L2118.9166 2341.6563 2118.6809 2338.1275 2115.0743 2338.1275 C2111.4665 2338.1275 2111.2307 2341.6563 2111.2307 2343.3029 C2111.2307 2358.6747 Ltrue setoverprintf false setoverprintnfalse eomode2091.4251 2371.3956 m2091.4251 2373.3567 2090.2368 2373.5074 2089.2068 2373.5074 C2082.8688 2373.5074 L2081.8388 2373.5074 2080.6505 2373.3567 2080.6505 2371.3956 C2080.6505 2346.4306 L2080.6505 2344.695 2080.7291 2340.8488 2076.7689 2340.8488 C2074.4708 2340.8488 2073.0444 2342.4324 2073.0444 2344.3935 C2073.0444 2371.3956 L2073.0444 2373.3567 2071.856 2373.5074 2070.8261 2373.5074 C2064.488 2373.5074 L2063.4581 2373.5074 2062.2698 2373.3567 2062.2698 2371.3956 C2062.2698 2342.2068 L2062.2698 2333.8341 2067.5779 2330.9684 2072.4109 2330.9684 C2074.7875 2330.9684 2077.4023 2331.5715 2079.3824 2333.3818 C2079.5408 2333.5326 2079.6991 2333.7593 2079.9373 2333.7593 C2080.1754 2333.7593 2080.6505 2333.8341 2080.6505 2333.2311 C2080.6505 2333.0043 L2080.6505 2332.1745 2081.3637 2331.5715 2082.1555 2331.5715 C2089.2068 2331.5715 L2090.2368 2331.5715 2091.4251 2331.7222 2091.4251 2333.6834 C2091.4251 2371.3956 L[1 0.4627 0.7569 0]vcf n2091.4251 2371.3956 m2091.4251 2373.3567 2090.2368 2373.5074 2089.2068 2373.5074 C2082.8688 2373.5074 L2081.8388 2373.5074 2080.6505 2373.3567 2080.6505 2371.3956 C2080.6505 2346.4306 L2080.6505 2344.695 2080.7291 2340.8488 2076.7689 2340.8488 C2074.4708 2340.8488 2073.0444 2342.4324 2073.0444 2344.3935 C2073.0444 2371.3956 L2073.0444 2373.3567 2071.856 2373.5074 2070.8261 2373.5074 C2064.488 2373.5074 L2063.4581 2373.5074 2062.2698 2373.3567 2062.2698 2371.3956 C2062.2698 2342.2068 L2062.2698 2333.8341 2067.5779 2330.9684 2072.4109 2330.9684 C2074.7875 2330.9684 2077.4023 2331.5715 2079.3824 2333.3818 C2079.5408 2333.5326 2079.6991 2333.7593 2079.9373 2333.7593 C2080.1754 2333.7593 2080.6505 2333.8341 2080.6505 2333.2311 C2080.6505 2333.0043 L2080.6505 2332.1745 2081.3637 2331.5715 2082.1555 2331.5715 C2089.2068 2331.5715 L2090.2368 2331.5715 2091.4251 2331.7222 2091.4251 2333.6834 C2091.4251 2371.3956 L[0 0 0 1]vctrue setoverprintf false setoverprintn1972.0891 2355.9083 m1972.0891 2360.7093 L1972.0891 2361.5965 1972.9762 2362.4836 1973.8622 2362.4836 C1989.9094 2362.4836 L1991.039 2362.4836 1991.6837 2361.6764 1991.6837 2360.7093 C1991.6837 2347.3605 L1991.6837 2347.0419 1991.6518 2346.6922 1991.5889 2346.3171 C1991.5889 2331.5356 L1982.8219 2331.5356 L1982.822 2333.9699 L1980.4989 2332.4276 1977.7824 2331.3696 1974.7493 2331.2333 C1966.6942 2330.8714 1955.5583 2332.684 1955.5583 2351.9562 C1955.5583 2368.9718 L1955.5583 2388.0828 1969.4633 2389.709 1977.0071 2388.9687 C1988.3506 2387.8556 1990.7367 2376.9522 1990.7367 2375.3391 C1990.8219 2369.3843 L1990.7667 2369.1182 1979.6737 2369.1182 1979.3465 2369.3636 C1978.8574 2369.7304 1980.9781 2377.7031 1974.7667 2378.0996 C1965.8 2378.6721 1967.4922 2371.3908 1967.4922 2366.1492 C1967.4922 2354.6988 L1967.4922 2349.6184 1967.0886 2341.7153 1973.8622 2341.7153 C1978.6202 2341.7153 1979.7498 2345.1827 1979.7498 2348.8924 C1979.7498 2352.6022 L1979.7498 2353.1669 1979.7498 2354.214 1978.2166 2354.214 C1973.7822 2354.214 L1972.8138 2354.214 1972.0891 2354.86 1972.0891 2355.9083 Ctrue setoverprintf false setoverprintnvmrvmrend%%Trailer